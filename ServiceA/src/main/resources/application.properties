server.port=8080


management.health.circuitbreakers.enabled= true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always


#- Reference Doc -https://resilience4j.readme.io/docs/circuitbreaker
resilience4j.circuitbreaker.instances.clientOrderService.register-health-indicator=true
resilience4j.circuitbreaker.instances.clientOrderService.event-consumer-buffer-size =10


# When the failure rate is equal or greater than the threshold the CircuitBreaker transitions to open and starts short-circuiting calls.
resilience4j.circuitbreaker.instances.clientOrderService.failure-rate-threshold=50

#For example, if minimumNumberOfCalls is 10, then at least 10 calls must be recorded, before the failure rate can be calculated.
#If only 9 calls have been recorded the CircuitBreaker will not transition to open even if all 9 calls have failed.
resilience4j.circuitbreaker.instances.clientOrderService.minimum-number-of-calls=5

#If set to true it means that the CircuitBreaker will automatically transition from open to half-open state and no call is needed to trigger the transition
resilience4j.circuitbreaker.instances.clientOrderService..automatic-transition-from-open-to-half-open-enabled=true
#The time that the CircuitBreaker should wait before transitioning from open to half-open.
resilience4j.circuitbreaker.instances.clientOrderService..wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.clientOrderService..permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.clientOrderService..sliding-window-size=10

#If the sliding window is COUNT_BASED, the last slidingWindowSize calls are recorded and aggregated.
#If the sliding window is TIME_BASED, the calls of the last slidingWindowSize seconds recorded and aggregated.
resilience4j.circuitbreaker.instances.clientOrderService..sliding-window-type=COUNT_BASED


resilience4j.retry.instances.clientOrderService.max-attempts=3
resilience4j.retry.instances.clientOrderService.wait-duration=10s